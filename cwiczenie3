/* Ćwiczenie1: Znajdź budynki, które zostały wybudowane lub wyremontowane na przestrzeni roku (zmiana
pomiędzy 2018 a 2019) */

SELECT COUNT(t2.polygon_id) FROM cwiczenie3.t2018_kar_buildings t1 
FULL JOIN cwiczenie3.t2019_kar_buildings t2 ON t1.polygon_id=t2.polygon_id 
WHERE (t1.type IS NULL AND t2.type IS NOT NULL OR t2.height != t1.height) OR t1.geom < t2.geom
	

/* Ćwiczenie2: Znajdź ile nowych POI pojawiło się w prmieniu 500 m od wyremontowanych lub
wybudowanych budynków, które znalezione zostały w zadaniu 1. Policz je wg ich kategorii. */
SELECT * FROM cwiczenie3.t2019_kar_poi_table
SELECT * FROM cwiczenie3.t2018_kar_poi_table


CREATE TABLE cwiczenie3.renovated_buildings AS 
SELECT t2.* FROM cwiczenie3.t2018_kar_buildings t1 
FULL JOIN cwiczenie3.t2019_kar_buildings t2 ON t1.polygon_id=t2.polygon_id 
WHERE (t1.type IS NULL AND t2.type IS NOT NULL OR t2.height != t1.height) OR t1.geom < t2.geom
SELECT * FROM cwiczenie3.renovated_buildings

SELECT pt2.poi_id FROM cwiczenie3.t2019_kar_poi_table pt1
FULL JOIN cwiczenie3.t2019_kar_poi_table pt2 ON pt1.poi_id=pt2.poi_id 
WHERE pt2.poi_id != pt1.poi_id

/* Ćwiczenie3: Utwórz nową tabelę o nazwie ‘streets_reprojected’, która zawierać będzie dane z tabeli
T2019_KAR_STREETS przetransformowane do układu współrzędnych DHDN.Berlin/Cassini.*/
/*EPSG:3068*/
CREATE TABLE cwiczenie3.streets_reprojected AS SELECT gid, link_id, st_name, ref_in_id, nref_in_id, func_class, speed_cat, fr_speed_l, to_speed_l, dir_travel, ST_Transform(geom, 3068) as geom  FROM cwiczenie3.t2019_kar_streets 
SELECT * FROM cwiczenie3.streets_reprojected
SELECT ST_SRID(geom) FROM cwiczenie3.streets_reprojected

/* Ćwiczenie 4: Stwórz tabelę o nazwie ‘input_points’ i dodaj do niej dwa rekordy o geometrii punktowej.
Użyj następujących współrzędnych: X Y
8.36093 49.03174
8.39876 49.00644

Przyjmij układ współrzędnych GPS */

CREATE TABLE cwiczenie3.input_points (geom GEOMETRY) 
INSERT INTO cwiczenie3.input_points VALUES (ST_GeomFromText('POINT(8.36093 49.03174)', 4326))
INSERT INTO cwiczenie3.input_points VALUES (ST_GeomFromText('POINT(8.39876 49.00644)', 4326))
SELECT ST_SRID(geom) FROM cwiczenie3.input_points
SELECT * FROM cwiczenie3.input_points

/* Ćwiczenie 5: Zaktualizuj dane w tabeli ‘input_points’ tak, aby punkty te były w układzie współrzędnych
DHDN.Berlin/Cassini. Wyświetl współrzędne za pomocą funkcji ST_AsText(). */
SELECT ST_Transform(ip.geom, 3068) FROM cwiczenie3.input_points ip
UPDATE cwiczenie3.input_points ip SET geom=ST_Transform(ip.geom, 3068)
SELECT ST_SRID(geom) FROM cwiczenie3.input_points
SELECT ST_AsText(geom) FROM cwiczenie3.input_points

/* Ćwiczenie 6: Znajdź wszystkie skrzyżowania, które znajdują się w odległości 200 m od linii zbudowanej
z punktów w tabeli ‘input_points’. Wykorzystaj tabelę T2019_STREET_NODE. Dokonaj
reprojekcji geometrii, aby była zgodna z resztą tabel. */

SELECT * FROM cwiczenie3.t2019_kar_street_node
SELECT ST_SRID(geom) FROM cwiczenie3.t2019_kar_street_node
SELECT UpdateGeometrySRID('cwiczenie3','t2019_kar_street_node','geom',3068);
UPDATE cwiczenie3.t2019_kar_street_node sn SET geom=ST_Transform(sn.geom, 3068) 
SELECT ST_SRID(geom) FROM cwiczenie3.t2019_kar_street_node

SELECT DISTINCT * FROM cwiczenie3.t2019_kar_street_node sn WHERE sn.intersect='Y' AND
ST_DWithin(ST_SetSRID(ST_ShortestLine('POINT(8.36093 49.03174)','POINT(8.39876 49.00644)'), 3068),sn.geom,200)

SELECT sn.node_id FROM cwiczenie3.t2019_kar_street_node sn WHERE ST_Distance(sn.geom,ST_ShortestLine('POINT(-344665.6101066416 -353239.62974793336)','POINT(-342099.7650728856 -356243.3017531191)'))																			 
AND 

SELECT * FROM cwiczenie3.input_points

/* Ćwiczenie 7: Policz jak wiele sklepów sportowych (‘Sporting Goods Store’ - tabela POIs) znajduje się
w odległości 300 m od parków (LAND_USE_A).*/
																							 
SELECT * FROM cwiczenie3.t2019_kar_poi_table
SELECT * FROM cwiczenie3.t2019_kar_land_use_a
																			 
SELECT DISTINCT p.poi_name, p.type FROM cwiczenie3.t2019_kar_poi_table p, cwiczenie3.t2019_kar_land_use_a l WHERE ST_DWithin(l.geom, p.geom, 0.0027) AND p.type = 'Sporting Goods Store' AND l.type='Park (City/County)';

/* Ćwiczenie 8: Znajdź punkty przecięcia torów kolejowych (RAILWAYS) z ciekami (WATER_LINES). Zapisz
znalezioną geometrię do osobnej tabeli o nazwie ‘T2019_KAR_BRIDGES’. */

CREATE TABLE cwiczenie3.t2019_kar_bridges AS SELECT DISTINCT ST_AsText(ST_Intersection(r.geom, wl.geom)) FROM cwiczenie3.t2019_kar_railways r, cwiczenie3.t2019_kar_water_lines wl   
SELECT * FROM cwiczenie3.t2019_kar_bridges